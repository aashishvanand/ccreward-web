export const axisCardRewards = {
  "Axis ACE": {
    defaultRate: 1 / 100,
    mccRates: {}
  },
  "Atlas": {
    defaultRate: 2 / 100,
    mccRates: {
          //airlines
          "3000": 5 / 100, "3001": 5 / 100, "3002": 5 / 100, "3003": 5 / 100, "3004": 5 / 100, "3005": 5 / 100,
          "3006": 5 / 100, "3007": 5 / 100, "3008": 5 / 100, "3009": 5 / 100, "3010": 5 / 100, "3011": 5 / 100,
          "3012": 5 / 100, "3013": 5 / 100, "3014": 5 / 100, "3015": 5 / 100, "3016": 5 / 100, "3017": 5 / 100,
          "3018": 5 / 100, "3019": 5 / 100, "3020": 5 / 100, "3021": 5 / 100, "3022": 5 / 100, "3023": 5 / 100,
          "3024": 5 / 100, "3025": 5 / 100, "3026": 5 / 100, "3027": 5 / 100, "3028": 5 / 100, "3029": 5 / 100,
          "3030": 5 / 100, "3031": 5 / 100, "3032": 5 / 100, "3033": 5 / 100, "3034": 5 / 100, "3035": 5 / 100,
          "3036": 5 / 100, "3037": 5 / 100, "3038": 5 / 100, "3039": 5 / 100, "3040": 5 / 100, "3041": 5 / 100,
          "3042": 5 / 100, "3043": 5 / 100, "3044": 5 / 100, "3045": 5 / 100, "3046": 5 / 100, "3047": 5 / 100,
          "3048": 5 / 100, "3049": 5 / 100, "3050": 5 / 100, "3051": 5 / 100, "3052": 5 / 100, "3053": 5 / 100,
          "3054": 5 / 100, "3055": 5 / 100, "3056": 5 / 100, "3057": 5 / 100, "3058": 5 / 100, "3059": 5 / 100,
          "3060": 5 / 100, "3061": 5 / 100, "3062": 5 / 100, "3063": 5 / 100, "3064": 5 / 100, "3065": 5 / 100,
          "3066": 5 / 100, "3067": 5 / 100, "3068": 5 / 100, "3069": 5 / 100, "3070": 5 / 100, "3071": 5 / 100,
          "3072": 5 / 100, "3073": 5 / 100, "3074": 5 / 100, "3075": 5 / 100, "3076": 5 / 100, "3077": 5 / 100,
          "3078": 5 / 100, "3079": 5 / 100, "3080": 5 / 100, "3081": 5 / 100, "3082": 5 / 100, "3083": 5 / 100,
          "3084": 5 / 100, "3085": 5 / 100, "3086": 5 / 100, "3087": 5 / 100, "3088": 5 / 100, "3089": 5 / 100,
          "3090": 5 / 100, "3091": 5 / 100, "3092": 5 / 100, "3093": 5 / 100, "3094": 5 / 100, "3095": 5 / 100,
          "3096": 5 / 100, "3097": 5 / 100, "3098": 5 / 100, "3099": 5 / 100, "3100": 5 / 100, "3101": 5 / 100,
          "3102": 5 / 100, "3103": 5 / 100, "3104": 5 / 100, "3105": 5 / 100, "3106": 5 / 100, "3107": 5 / 100,
          "3108": 5 / 100, "3109": 5 / 100, "3110": 5 / 100, "3111": 5 / 100, "3112": 5 / 100, "3113": 5 / 100,
          "3114": 5 / 100, "3115": 5 / 100, "3116": 5 / 100, "3117": 5 / 100, "3118": 5 / 100, "3119": 5 / 100,
          "3120": 5 / 100, "3121": 5 / 100, "3122": 5 / 100, "3123": 5 / 100, "3124": 5 / 100, "3125": 5 / 100,
          "3126": 5 / 100, "3127": 5 / 100, "3128": 5 / 100, "3129": 5 / 100, "3130": 5 / 100, "3131": 5 / 100,
          "3132": 5 / 100, "3133": 5 / 100, "3134": 5 / 100, "3135": 5 / 100, "3136": 5 / 100, "3137": 5 / 100,
          "3138": 5 / 100, "3139": 5 / 100, "3140": 5 / 100, "3141": 5 / 100, "3142": 5 / 100, "3143": 5 / 100,
          "3144": 5 / 100, "3145": 5 / 100, "3146": 5 / 100, "3147": 5 / 100, "3148": 5 / 100, "3149": 5 / 100,
          "3150": 5 / 100, "3151": 5 / 100, "3152": 5 / 100, "3153": 5 / 100, "3154": 5 / 100, "3155": 5 / 100,
          "3156": 5 / 100, "3157": 5 / 100, "3158": 5 / 100, "3159": 5 / 100, "3160": 5 / 100, "3161": 5 / 100,
          "3162": 5 / 100, "3163": 5 / 100, "3164": 5 / 100, "3165": 5 / 100, "3166": 5 / 100, "3167": 5 / 100,
          "3168": 5 / 100, "3169": 5 / 100, "3170": 5 / 100, "3171": 5 / 100, "3172": 5 / 100, "3173": 5 / 100,
          "3174": 5 / 100, "3175": 5 / 100, "3176": 5 / 100, "3177": 5 / 100, "3178": 5 / 100, "3179": 5 / 100,
          "3180": 5 / 100, "3181": 5 / 100, "3182": 5 / 100, "3183": 5 / 100, "3184": 5 / 100, "3185": 5 / 100,
          "3186": 5 / 100, "3187": 5 / 100, "3188": 5 / 100, "3189": 5 / 100, "3190": 5 / 100, "3191": 5 / 100,
          "3192": 5 / 100, "3193": 5 / 100, "3194": 5 / 100, "3195": 5 / 100, "3196": 5 / 100, "3197": 5 / 100,
          "3198": 5 / 100, "3199": 5 / 100, "3200": 5 / 100, "3201": 5 / 100, "3202": 5 / 100, "3203": 5 / 100,
          "3204": 5 / 100, "3205": 5 / 100, "3206": 5 / 100, "3207": 5 / 100, "3208": 5 / 100, "3209": 5 / 100,
          "3210": 5 / 100, "3211": 5 / 100, "3212": 5 / 100, "3213": 5 / 100, "3214": 5 / 100, "3215": 5 / 100,
          "3216": 5 / 100, "3217": 5 / 100, "3218": 5 / 100, "3219": 5 / 100, "3220": 5 / 100, "3221": 5 / 100,
          "3222": 5 / 100, "3223": 5 / 100, "3224": 5 / 100, "3225": 5 / 100, "3226": 5 / 100, "3227": 5 / 100,
          "3228": 5 / 100, "3229": 5 / 100, "3230": 5 / 100, "3231": 5 / 100, "3232": 5 / 100, "3233": 5 / 100,
          "3234": 5 / 100, "3235": 5 / 100, "3236": 5 / 100, "3237": 5 / 100, "3238": 5 / 100, "3239": 5 / 100,
          "3240": 5 / 100, "3241": 5 / 100, "3242": 5 / 100, "3243": 5 / 100, "3244": 5 / 100, "3245": 5 / 100,
          "3246": 5 / 100, "3247": 5 / 100, "3248": 5 / 100, "3249": 5 / 100, "3250": 5 / 100, "3251": 5 / 100,
          "3252": 5 / 100, "3253": 5 / 100, "3254": 5 / 100, "3255": 5 / 100, "3256": 5 / 100, "3257": 5 / 100,
          "3258": 5 / 100, "3259": 5 / 100, "3260": 5 / 100, "3261": 5 / 100, "3262": 5 / 100, "3263": 5 / 100,
          "3264": 5 / 100, "3265": 5 / 100, "3266": 5 / 100, "3267": 5 / 100, "3268": 5 / 100, "3269": 5 / 100,
          "3270": 5 / 100, "3271": 5 / 100, "3272": 5 / 100, "3273": 5 / 100, "3274": 5 / 100, "3275": 5 / 100,
          "3276": 5 / 100, "3277": 5 / 100, "3278": 5 / 100, "3279": 5 / 100, "3280": 5 / 100, "3281": 5 / 100,
          "3282": 5 / 100, "3283": 5 / 100, "3284": 5 / 100, "3285": 5 / 100, "3286": 5 / 100, "3287": 5 / 100,
          "3288": 5 / 100, "3289": 5 / 100, "3290": 5 / 100, "3291": 5 / 100, "3292": 5 / 100, "3293": 5 / 100,
          "3294": 5 / 100, "3295": 5 / 100, "3296": 5 / 100, "3297": 5 / 100, "3298": 5 / 100, "3299": 5 / 100,
          "3300": 5 / 100, "3301": 5 / 100, "3302": 5 / 100, "3303": 5 / 100, "3304": 5 / 100, "3305": 5 / 100,
          "3306": 5 / 100, "3307": 5 / 100, "3308": 5 / 100, "3309": 5 / 100, "3310": 5 / 100, "3311": 5 / 100,
          "3312": 5 / 100, "3313": 5 / 100, "3314": 5 / 100, "3315": 5 / 100, "3316": 5 / 100, "3317": 5 / 100,
          "3318": 5 / 100, "3319": 5 / 100, "3320": 5 / 100, "3321": 5 / 100, "3322": 5 / 100, "3323": 5 / 100,
          "3324": 5 / 100, "3325": 5 / 100, "3326": 5 / 100, "3327": 5 / 100, "3328": 5 / 100, "3329": 5 / 100,
          "3330": 5 / 100, "3331": 5 / 100, "3332": 5 / 100, "3333": 5 / 100, "3334": 5 / 100, "3335": 5 / 100,
          "3336": 5 / 100, "3337": 5 / 100, "3338": 5 / 100, "3339": 5 / 100, "3340": 5 / 100, "3341": 5 / 100,
          "3342": 5 / 100, "3343": 5 / 100, "3344": 5 / 100, "3345": 5 / 100, "3346": 5 / 100, "3347": 5 / 100,
          "3348": 5 / 100, "3349": 5 / 100, "3350": 5 / 100, "4511": 5 / 100,
          //hotels
          "3501": 5 / 100, "3502": 5 / 100, "3503": 5 / 100, "3504": 5 / 100, "3505": 5 / 100,
          "3506": 5 / 100, "3507": 5 / 100, "3508": 5 / 100, "3509": 5 / 100, "3510": 5 / 100, "3511": 5 / 100,
          "3512": 5 / 100, "3513": 5 / 100, "3514": 5 / 100, "3515": 5 / 100, "3516": 5 / 100, "3517": 5 / 100,
          "3518": 5 / 100, "3519": 5 / 100, "3520": 5 / 100, "3521": 5 / 100, "3522": 5 / 100, "3523": 5 / 100,
          "3524": 5 / 100, "3525": 5 / 100, "3526": 5 / 100, "3527": 5 / 100, "3528": 5 / 100, "3529": 5 / 100,
          "3530": 5 / 100, "3531": 5 / 100, "3532": 5 / 100, "3533": 5 / 100, "3534": 5 / 100, "3535": 5 / 100,
          "3536": 5 / 100, "3537": 5 / 100, "3538": 5 / 100, "3539": 5 / 100, "3540": 5 / 100, "3541": 5 / 100,
          "3542": 5 / 100, "3543": 5 / 100, "3544": 5 / 100, "3545": 5 / 100, "3546": 5 / 100, "3547": 5 / 100,
          "3548": 5 / 100, "3549": 5 / 100, "3550": 5 / 100, "3551": 5 / 100, "3552": 5 / 100, "3553": 5 / 100,
          "3554": 5 / 100, "3555": 5 / 100, "3556": 5 / 100, "3557": 5 / 100, "3558": 5 / 100, "3559": 5 / 100,
          "3560": 5 / 100, "3561": 5 / 100, "3562": 5 / 100, "3563": 5 / 100, "3564": 5 / 100, "3565": 5 / 100,
          "3566": 5 / 100, "3567": 5 / 100, "3568": 5 / 100, "3569": 5 / 100, "3570": 5 / 100, "3571": 5 / 100,
          "3572": 5 / 100, "3573": 5 / 100, "3574": 5 / 100, "3575": 5 / 100, "3576": 5 / 100, "3577": 5 / 100,
          "3578": 5 / 100, "3579": 5 / 100, "3580": 5 / 100, "3581": 5 / 100, "3582": 5 / 100, "3583": 5 / 100,
          "3584": 5 / 100, "3585": 5 / 100, "3586": 5 / 100, "3587": 5 / 100, "3588": 5 / 100, "3589": 5 / 100,
          "3590": 5 / 100, "3591": 5 / 100, "3592": 5 / 100, "3593": 5 / 100, "3594": 5 / 100, "3595": 5 / 100,
          "3596": 5 / 100, "3597": 5 / 100, "3598": 5 / 100, "3599": 5 / 100, "3600": 5 / 100, "3601": 5 / 100,
          "3602": 5 / 100, "3603": 5 / 100, "3604": 5 / 100, "3605": 5 / 100, "3606": 5 / 100, "3607": 5 / 100,
          "3608": 5 / 100, "3609": 5 / 100, "3610": 5 / 100, "3611": 5 / 100, "3612": 5 / 100, "3613": 5 / 100,
          "3614": 5 / 100, "3615": 5 / 100, "3616": 5 / 100, "3617": 5 / 100, "3618": 5 / 100, "3619": 5 / 100,
          "3620": 5 / 100, "3621": 5 / 100, "3622": 5 / 100, "3623": 5 / 100, "3624": 5 / 100, "3625": 5 / 100,
          "3626": 5 / 100, "3627": 5 / 100, "3628": 5 / 100, "3629": 5 / 100, "3630": 5 / 100, "3631": 5 / 100,
          "3632": 5 / 100, "3633": 5 / 100, "3634": 5 / 100, "3635": 5 / 100, "3636": 5 / 100, "3637": 5 / 100,
          "3638": 5 / 100,
          "7011": 5 / 100,
          "6300": 0, "6381": 0, "5960": 0, "6012": 0, "6051": 0, // Insurance
          "6513": 0, // Rent
          "6540": 0, // Wallet
          "9222": 0, "9311": 0, "9399": 0, "9402": 0, // Government services
          "4814": 0, "4816": 0, "4899": 0, "4900": 0, // Utilities
          "5094": 0, "5944": 0, // Gold/Jewellery
          "5541": 0, "5542": 0, "5983": 0 // Fuel
      }      
    },
  "Aura": {
    defaultRate: 1 / 100,
    mccRates: {}
  },
  "Axis Vistara": {
    defaultRate: 6 / 200,
    mccRates: {
    }
  },
  "Axis Vistara Infinite": {
    defaultRate: 6 / 200,
    mccRates: {
      // Wallet Load
      "6540": 0,"4814": 0,
      // Rent
      "6513": 0,
      // Government Services
      "9222": 0,"9311": 0,"9399": 0,"9402": 0,
      // Utilities
      "4816": 0,"4899": 0,"4900": 0,
      // Insurance
      "6012": 0,"6051": 0,
      // Mutual Funds
      "6011": 0
    }
  },
  "Axis Vistara Signature": {
    defaultRate: 1 / 100,
    mccRates: {}
  },
  "Flipkart": {
    defaultRate: 1 / 100,
    mccRates: {}
  },
  "Freecharge": {
    defaultRate: 1 / 100,
    mccRates: {}
  },
  "IOCL": {
    defaultRate: 1 / 100,
    mccRates: {}
  },
  "Magnus": {
    defaultRate: 1 / 16.666,
    mccRates: {}
  },
  "MyZone": {
    defaultRate: 1 / 100,
    mccRates: {}
  },
  "Neo": {
    defaultRate: 1 / 200,
    mccRates: {}
  },
  "Privilege": {
    defaultRate: 1 / 20,
    mccRates: {}
  },
  "Reserve": {
    defaultRate: 1 / 13.33,
    mccRates: {}
  },
  "Rewards": {
    defaultRate: 1 / 62.5,
    mccRates: {}
  },
  "Select": {
    defaultRate: 1 / 100,
    mccRates: {}
  }
};

export const calculateAxisRewards = (cardName, amount, mcc, additionalParams = {}) => {
  const cardReward = axisCardRewards[cardName];
  if (!cardReward) {
    return {
      points: 0,
      rewardText: "Card not found",
      uncappedPoints: 0,
      cappedPoints: 0,
      appliedCap: null
    };
  }

  let rate = cardReward.defaultRate;
  let rateType = "default";

  // Check for international rate
  if (additionalParams.isInternational && cardReward.internationalRate) {
    rate = cardReward.internationalRate;
    rateType = "international";
  }
  // Check for MCC-specific rate
  else if (mcc && cardReward.mccRates && cardReward.mccRates[mcc]) {
    rate = cardReward.mccRates[mcc];
    rateType = "mcc-specific";
  }

  let points = Math.floor(amount * rate);
  let cappedPoints = points;
  let appliedCap = null;

  // Apply category-specific capping if available
  if (cardReward.capping && cardReward.capping.categories && mcc) {
    const mccName = mcc.toLowerCase();
    const cappingCategories = cardReward.capping.categories;
    
    const matchingCategory = Object.keys(cappingCategories).find(cat => 
      mccName.includes(cat.toLowerCase())
    );

    if (matchingCategory) {
      const { points: catPoints, maxSpent: catMaxSpent } = cappingCategories[matchingCategory];
      const cappedAmount = Math.min(amount, catMaxSpent);
      cappedPoints = Math.min(points, catPoints, Math.floor(cappedAmount * rate));
      
      if (cappedPoints < points) {
        appliedCap = {
          category: matchingCategory,
          maxPoints: catPoints,
          maxSpent: catMaxSpent
        };
      }
    }
  }

  // Default reward text
  let rewardText = `${cappedPoints} Axis Reward Points`;

  // Bank-specific logic (to be customized for each bank)
  switch (cardName) {
    case "Axis Atlas":
        rewardText = rate === 0 ? "No EDGE Miles for this transaction" : `${cappedPoints} EDGE Miles`;
        break;
    case "Axis Vistara":
            rewardText = rate === 0 ? "No CV Points for this transaction" : `${cappedPoints} CV Points`;
            break;
    default:
      // Default case if no specific logic is needed
      break;
  }

  return {
    points: cappedPoints,
    rewardText,
    uncappedPoints: points,
    cappedPoints,
    appliedCap,
    rateUsed: rate,
    rateType
  };
};